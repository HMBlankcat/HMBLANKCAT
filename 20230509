＆＆短路特性：表达式1＆＆表达式2 先求解表达式1 若为false不求2 若为true 则求解2 以2为最终结果
｜｜也有类似的特性
三目运算符 表达式1？表达式2：表达式3 表达式1必须是bool类型 
条件运算符优先级高于赋值运算符，低于逻辑运算符
表达式2、3的类型可以不同，条件表达式的最终类型为2和3中较高的类型
位运算！
按位与＆：将两个运算量中的每一个位进行逻辑与操作0 0为0 0 1为0 1 1为1
eg：计算3＆5
3：00000011
5：00000101
3＆5：00000001
将某一位置0，其他位置不变

按位或｜：将两个运算量的每一个位进行逻辑或操作
3｜5：00000111

按位异或^:
计算071^521
071:00111001
052:00101010
071^051:00010011
若对应位相同则结果该位为0
若对应位不同则结果该位为1
用途：使特定位翻转（与0异或保持原值，与异或取反）
例如：要01111010低四位翻转：
01111010
(^)00001111
01110101

取反～：单目运算符，对一个二进制数按位取反
eg：025：0000000000010101
～025：1111111111101010

移位
左移运算（<<)
左移后 低位补0 高位舍弃
右移运算（>>)
右移后低位舍弃，高位：无符号数：补0，有符号数：补“符号位”

-8左移为0xf8
11111000－>11110000 0xf0
 10010000 -16
 11110000右移
 11111000

从右至左运算的运算符:
! ~ ++ -- (类型)sizeof  + - ＊ ＆
||  ?:


隐含转换

cin自动跳过输入的空白字符 包括空格，制表和回车
在键盘输入多个数据时，数据之间必须用空格键 tab键或者enter键隔开
结束输入必须敲击enter
cin.clear()更改cin状态的标示符
cin.sync()是用来清除缓存区的数据流
为了使数据间隔开，可以使用c＋＋提供的函数setw()指定输出数据项的宽度
cout<<setw(6)<<i<<endl;
使用setw必须用#include <iomanip>
*dec 十进制输出整数
hex 十六进制  oct 
fixed 以普通小数形式输出浮点数
scientific 科学计数法
cout<<bitset<sizeof(a)*8>>(a)<<endl;





