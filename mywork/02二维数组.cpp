/*二维数组定义方式:
1.数据类型 数组名[行数][列数];
2.数据类型 数组名[行数][列数] = {{数据1,数据2},{数据3,数据4}};
3.数据类型 数组名[行数][列数] = {数据1,数据2,数据3,数据4}
4.数据类型 数组名[    ][列数] = {数据1,数据2,数据3,数据4}*/
    
#include <iostream>
using namespace std;
#include <string>
int main()
{
    /*int arr2[2][3]=
    {
        {1,2,3},
        {4,5,6}
    };
    int arr3[2][3]={1,2,3,4,5,6};
    int arr4[][3]={1,2,3,4,5,6};

*/
//---------------------------------------------
//二维数组名称用途1.可以查看占用内存大小2.可以查看二维数组的首地址
    /*int arr[2][3] = 
    {
        {1,2,3},
        {4,5,6}
    };
    cout << "二维数组占用内存空间为:" << sizeof(arr) << endl;
    cout << "二维数组第一行占用内存为:" << sizeof(arr[0]) << endl;
    cout << "二维数组第一个元素占用内存为:" << sizeof(arr[0][0]) <<endl;
    cout << "二维数组行数为" <<sizeof(arr) / sizeof(arr[0]) << endl;
    cout << "二维数组列数为" << sizeof(arr[0]) / sizeof(arr[0][0]) << endl;
    cout <<"二维数组的首地址为" << arr <<endl;
    cout << "二维数组第一行的首地址为" << (long long)arr[0] <<endl;
    cout << "二维数组第2行的首地址为" << (long long)arr[1] <<endl;
    cout << "二维数组第一个元素的首地址为" << (long long)&arr[0][0] <<endl;*/
    //使用案例------------------------------------------------------------
    /*1.创建二维数组,3行3列
    2.统计考试成绩,让每行的3列相加,统计出总和*/
    int scores[3][3]={
        {100,100,100},
        {90,50,100},
        {60,70,80}
    };
    string names[3]={"张三","李四","王五"};
    for(int i = 0; i<3;i++)
    {
        int sum = 0;//统计分数综合变量
        for (int j = 0;j <3;j++)
        {
            sum += scores[i][j];
            cout << scores[i][j] << " ";

        }
        cout << names[i] << "的总分为:" << sum << endl;
    }
    system("pause");
    return 0;
}
