#include <iostream>
using namespace std;
int main()//内存编号是从0开始记录的,一般用十六进制数字表示,可以利用指针变量保存地址
{//可以通过指针来保存一个地址,指针就是一个地址
    //定义指针
    int a = 10;
    //定义指针的语法:数据类型 * 指针变量名
    int * p;
    //让指针记录变量a的地址
    p = &a ;
    cout << "a的地址为:" << &a << endl;
    cout << "指针p为:" << p << endl;
//接下来我们来看看&i 是什么意思？是取 i 变量所在的地址编号嘛！我们可以这样大声读出来：返回 i 变量的地址编号。你记住了吗？如果没有，在读一遍：返回 i 变量的地址编号。
    // //2.使用指针
    // //可以通过解引用的方式来找到指针指向的内存
    // //指针前加 * 代表解引用,找到指针指向的内存中的数据
    // *p = 1000;
    // cout << "a=" << a << endl;
    // cout << "*p=" << *p << endl;
    //间接访问内存并进行读和写的操作
    //---------------------------------------------------
    //在32位操作系统下:指针所占内存空间为4个字节;64位占8个字节
    //指针所占内存空间大小
    // int a = 10;
    // // int * p;
    // // p = &a ; 
    // int * p = &a;
    // cout << "sizeof int * = "<< sizeof(int *) << endl;
    // cout << "sizeof float * = "<< sizeof(float *) << endl;
    // cout << "sizeof double * = "<< sizeof(double *) << endl;
    // cout << "sizeof char * = "<< sizeof(char *) << endl;
    //&取出的是一个变量在内存中起始存储单元的地址，比如：int类型所占4个存储单元，但只会取出4个存储单元中最小的地址



system("pause");
return 0;

}